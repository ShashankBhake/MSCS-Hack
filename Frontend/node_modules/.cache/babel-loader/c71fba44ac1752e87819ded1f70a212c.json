{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharvani\\\\Documents\\\\GitHub\\\\MSCS-Hack\\\\Frontend\\\\src\\\\charts\\\\BarChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { useEffect } from 'react';\nimport { PieChart } from './PieChart';\nimport StateSocieties from './StateSocieties';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Registration count each day'\n    },\n    tooltip: {\n      enabled: true\n    }\n  }\n};\n\nfunction BarChart() {\n  _s();\n\n  const [total, setTotal] = useState({});\n  const [vlabel, setLabel] = useState([]);\n  const [count, setCount] = useState([]);\n  useEffect(() => {\n    async function getdata() {\n      try {\n        const response = await axios.get('http://localhost:3000/reg_count');\n        console.log(response.data);\n        setLabel(response.data.labels);\n        setCount(response.data.counts);\n        console.log(vlabel);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    getdata();\n  }, []);\n  const labels = vlabel;\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Dataset 1',\n      data: count,\n      backgroundColor: '#9cb2d6'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n}\n\n_s(BarChart, \"IbXdTGIH2voqe700Oyu/8TFTndU=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","useEffect","PieChart","StateSocieties","register","options","responsive","plugins","legend","position","title","display","text","tooltip","enabled","BarChart","total","setTotal","vlabel","setLabel","count","setCount","getdata","response","get","console","log","data","labels","counts","e","datasets","label","backgroundColor"],"sources":["C:/Users/Sharvani/Documents/GitHub/MSCS-Hack/Frontend/src/charts/BarChart.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { useEffect } from 'react';\r\nimport { PieChart } from './PieChart';\r\nimport StateSocieties from './StateSocieties';\r\n\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Registration count each day',\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      \r\n   },\r\n  },\r\n};\r\n\r\n\r\n\r\nfunction BarChart() {\r\n  \r\n\r\n    const [total, setTotal] = useState({})  \r\n    const [vlabel, setLabel] = useState([]);\r\n    const [count, setCount] = useState([]);\r\n    useEffect(()=>{\r\n\r\n      async function getdata() {\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/reg_count');\r\n          console.log(response.data);\r\n      \r\n          \r\n          setLabel(response.data.labels);\r\n          setCount(response.data.counts);\r\n          console.log(vlabel)\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n        getdata();\r\n    }, [])\r\n\r\n\r\n\r\n    const labels = vlabel;\r\n\r\n const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: count,\r\n      backgroundColor: '#9cb2d6',\r\n    },\r\n    \r\n  ],\r\n};\r\n\r\n  return <Bar options={options} data={data} />\r\n    \r\n   \r\n    \r\n  \r\n}\r\n\r\nexport default BarChart;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;AASA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGAV,OAAO,CAACW,QAAR,CACEV,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF;AASA,OAAO,MAAMM,OAAO,GAAG;EACrBC,UAAU,EAAE,IADS;EAErBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IADJ,CADD;IAIPC,KAAK,EAAE;MACLC,OAAO,EAAE,IADJ;MAELC,IAAI,EAAE;IAFD,CAJA;IAQPC,OAAO,EAAE;MACPC,OAAO,EAAE;IADF;EARF;AAFY,CAAhB;;AAmBP,SAASC,QAAT,GAAoB;EAAA;;EAGhB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAC4B,MAAD,EAASC,QAAT,IAAqB7B,QAAQ,CAAC,EAAD,CAAnC;EACA,MAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;EACAW,SAAS,CAAC,MAAI;IAEZ,eAAeqB,OAAf,GAAyB;MACvB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAU,iCAAV,CAAvB;QACAC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;QAGAR,QAAQ,CAACI,QAAQ,CAACI,IAAT,CAAcC,MAAf,CAAR;QACAP,QAAQ,CAACE,QAAQ,CAACI,IAAT,CAAcE,MAAf,CAAR;QACAJ,OAAO,CAACC,GAAR,CAAYR,MAAZ;MACD,CARD,CAQE,OAAOY,CAAP,EAAU;QACVL,OAAO,CAACC,GAAR,CAAYI,CAAZ;MACD;IACF;;IACCR,OAAO;EACV,CAhBQ,EAgBN,EAhBM,CAAT;EAoBA,MAAMM,MAAM,GAAGV,MAAf;EAEH,MAAMS,IAAI,GAAG;IACZC,MADY;IAEZG,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WADT;MAEEL,IAAI,EAAEP,KAFR;MAGEa,eAAe,EAAE;IAHnB,CADQ;EAFE,CAAb;EAYC,oBAAO,QAAC,GAAD;IAAK,OAAO,EAAE5B,OAAd;IAAuB,IAAI,EAAEsB;EAA7B;IAAA;IAAA;IAAA;EAAA,QAAP;AAKD;;GA7CQZ,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}