{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharvani\\\\Documents\\\\GitHub\\\\MSCS-Hack\\\\Frontend\\\\src\\\\routes\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [hoveredState, setHoveredState] = useState('');\n  const [hoveredSector, setHoveredSector] = useState('');\n\n  const handleStateHover = stateName => {\n    setHoveredState(stateName);\n  };\n\n  const handleSectorHover = sectorName => {\n    setHoveredSector(sectorName);\n  }; // Temporary data for states and sectors\n\n\n  const statesData = [{\n    name: 'State 1',\n    path: 'M100 100 L200 100 L200 200 L100 200 Z'\n  }, {\n    name: 'State 2',\n    path: 'M300 100 L400 100 L400 200 L300 200 Z'\n  }, {\n    name: 'State 3',\n    path: 'M500 100 L600 100 L600 200 L500 200 Z'\n  }];\n  const sectorsData = [{\n    name: 'Sector 1',\n    path: 'M150 150 L250 150 L250 250 L150 250 Z'\n  }, {\n    name: 'Sector 2',\n    path: 'M350 150 L450 150 L450 250 L350 250 Z'\n  }, {\n    name: 'Sector 3',\n    path: 'M550 150 L650 150 L650 250 L550 250 Z'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 960 600\",\n    width: \"100%\",\n    height: \"auto\",\n    children: [statesData.map(state => /*#__PURE__*/_jsxDEV(\"path\", {\n      d: state.path,\n      fill: \"#e0e0e0\",\n      stroke: \"#9e9e9e\",\n      strokeWidth: \"0.5\",\n      onMouseEnter: () => handleStateHover(state.name),\n      onMouseLeave: () => setHoveredState('')\n    }, state.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), sectorsData.map(sector => /*#__PURE__*/_jsxDEV(\"path\", {\n      d: sector.path,\n      fill: \"#2196f3\",\n      fillOpacity: hoveredSector === sector.name ? '0.8' : '0.6',\n      stroke: \"#fff\",\n      strokeWidth: \"1\",\n      onMouseEnter: () => handleSectorHover(sector.name),\n      onMouseLeave: () => setHoveredSector('')\n    }, sector.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), hoveredState && /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"20\",\n      y: \"20\",\n      fill: \"#000\",\n      children: [\"Hovered State: \", hoveredState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), hoveredSector && /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"20\",\n      y: \"40\",\n      fill: \"#000\",\n      children: [\"Hovered Sector: \", hoveredSector]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"9i2GVyl9oXJYMGhEgktZVHTnvl0=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","Map","hoveredState","setHoveredState","hoveredSector","setHoveredSector","handleStateHover","stateName","handleSectorHover","sectorName","statesData","name","path","sectorsData","map","state","sector"],"sources":["C:/Users/Sharvani/Documents/GitHub/MSCS-Hack/Frontend/src/routes/Map.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Map = () => {\r\n  const [hoveredState, setHoveredState] = useState('');\r\n  const [hoveredSector, setHoveredSector] = useState('');\r\n\r\n  const handleStateHover = (stateName) => {\r\n    setHoveredState(stateName);\r\n  };\r\n\r\n  const handleSectorHover = (sectorName) => {\r\n    setHoveredSector(sectorName);\r\n  };\r\n\r\n  // Temporary data for states and sectors\r\n  const statesData = [\r\n    { name: 'State 1', path: 'M100 100 L200 100 L200 200 L100 200 Z' },\r\n    { name: 'State 2', path: 'M300 100 L400 100 L400 200 L300 200 Z' },\r\n    { name: 'State 3', path: 'M500 100 L600 100 L600 200 L500 200 Z' },\r\n  ];\r\n\r\n  const sectorsData = [\r\n    { name: 'Sector 1', path: 'M150 150 L250 150 L250 250 L150 250 Z' },\r\n    { name: 'Sector 2', path: 'M350 150 L450 150 L450 250 L350 250 Z' },\r\n    { name: 'Sector 3', path: 'M550 150 L650 150 L650 250 L550 250 Z' },\r\n  ];\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 960 600\"\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n    >\r\n      {/* Render the map with paths for each state */}\r\n      {statesData.map((state) => (\r\n        <path\r\n          key={state.name}\r\n          d={state.path}\r\n          fill=\"#e0e0e0\"\r\n          stroke=\"#9e9e9e\"\r\n          strokeWidth=\"0.5\"\r\n          onMouseEnter={() => handleStateHover(state.name)}\r\n          onMouseLeave={() => setHoveredState('')}\r\n        />\r\n      ))}\r\n\r\n      {/* Render the sectors on top of the map */}\r\n      {sectorsData.map((sector) => (\r\n        <path\r\n          key={sector.name}\r\n          d={sector.path}\r\n          fill=\"#2196f3\"\r\n          fillOpacity={hoveredSector === sector.name ? '0.8' : '0.6'}\r\n          stroke=\"#fff\"\r\n          strokeWidth=\"1\"\r\n          onMouseEnter={() => handleSectorHover(sector.name)}\r\n          onMouseLeave={() => setHoveredSector('')}\r\n        />\r\n      ))}\r\n\r\n      {/* Render the tooltips for state and sector */}\r\n      {hoveredState && (\r\n        <text x=\"20\" y=\"20\" fill=\"#000\">\r\n          Hovered State: {hoveredState}\r\n        </text>\r\n      )}\r\n\r\n      {hoveredSector && (\r\n        <text x=\"20\" y=\"40\" fill=\"#000\">\r\n          Hovered Sector: {hoveredSector}\r\n        </text>\r\n      )}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;;EAEA,MAAMM,gBAAgB,GAAIC,SAAD,IAAe;IACtCJ,eAAe,CAACI,SAAD,CAAf;EACD,CAFD;;EAIA,MAAMC,iBAAiB,GAAIC,UAAD,IAAgB;IACxCJ,gBAAgB,CAACI,UAAD,CAAhB;EACD,CAFD,CARgB,CAYhB;;;EACA,MAAMC,UAAU,GAAG,CACjB;IAAEC,IAAI,EAAE,SAAR;IAAmBC,IAAI,EAAE;EAAzB,CADiB,EAEjB;IAAED,IAAI,EAAE,SAAR;IAAmBC,IAAI,EAAE;EAAzB,CAFiB,EAGjB;IAAED,IAAI,EAAE,SAAR;IAAmBC,IAAI,EAAE;EAAzB,CAHiB,CAAnB;EAMA,MAAMC,WAAW,GAAG,CAClB;IAAEF,IAAI,EAAE,UAAR;IAAoBC,IAAI,EAAE;EAA1B,CADkB,EAElB;IAAED,IAAI,EAAE,UAAR;IAAoBC,IAAI,EAAE;EAA1B,CAFkB,EAGlB;IAAED,IAAI,EAAE,UAAR;IAAoBC,IAAI,EAAE;EAA1B,CAHkB,CAApB;EAMA,oBACE;IACE,KAAK,EAAC,4BADR;IAEE,OAAO,EAAC,aAFV;IAGE,KAAK,EAAC,MAHR;IAIE,MAAM,EAAC,MAJT;IAAA,WAOGF,UAAU,CAACI,GAAX,CAAgBC,KAAD,iBACd;MAEE,CAAC,EAAEA,KAAK,CAACH,IAFX;MAGE,IAAI,EAAC,SAHP;MAIE,MAAM,EAAC,SAJT;MAKE,WAAW,EAAC,KALd;MAME,YAAY,EAAE,MAAMN,gBAAgB,CAACS,KAAK,CAACJ,IAAP,CANtC;MAOE,YAAY,EAAE,MAAMR,eAAe,CAAC,EAAD;IAPrC,GACOY,KAAK,CAACJ,IADb;MAAA;MAAA;MAAA;IAAA,QADD,CAPH,EAoBGE,WAAW,CAACC,GAAZ,CAAiBE,MAAD,iBACf;MAEE,CAAC,EAAEA,MAAM,CAACJ,IAFZ;MAGE,IAAI,EAAC,SAHP;MAIE,WAAW,EAAER,aAAa,KAAKY,MAAM,CAACL,IAAzB,GAAgC,KAAhC,GAAwC,KAJvD;MAKE,MAAM,EAAC,MALT;MAME,WAAW,EAAC,GANd;MAOE,YAAY,EAAE,MAAMH,iBAAiB,CAACQ,MAAM,CAACL,IAAR,CAPvC;MAQE,YAAY,EAAE,MAAMN,gBAAgB,CAAC,EAAD;IARtC,GACOW,MAAM,CAACL,IADd;MAAA;MAAA;MAAA;IAAA,QADD,CApBH,EAkCGT,YAAY,iBACX;MAAM,CAAC,EAAC,IAAR;MAAa,CAAC,EAAC,IAAf;MAAoB,IAAI,EAAC,MAAzB;MAAA,8BACkBA,YADlB;IAAA;MAAA;MAAA;MAAA;IAAA,QAnCJ,EAwCGE,aAAa,iBACZ;MAAM,CAAC,EAAC,IAAR;MAAa,CAAC,EAAC,IAAf;MAAoB,IAAI,EAAC,MAAzB;MAAA,+BACmBA,aADnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAzCJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgDD,CAzED;;GAAMH,G;;KAAAA,G;AA2EN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}